import chakrasData from "./chakras.json";
import dayEQ7Data from "./dayEQ7_data.json";

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¢–∏—Ç—Ö–∏ (–õ—É–Ω–Ω–æ–≥–æ –¥–Ω—è)
function getCurrentTithi(lunarLongitude) {
    return Math.floor(lunarLongitude / 12) + 1;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ß–∞–∫—Ä—ã –ø–æ –¢–∏—Ç—Ö–∏ (—Ä–∞–∑–±–∏–≤–∞–µ–º 30 –¢–∏—Ç—Ö–∏ –Ω–∞ 7 –ß–∞–∫—Ä)
function getChakraFromTithi(tithi) {
    return Math.floor((tithi - 1) / 4.29) + 1;
}

// –ß–∞–∫—Ä–∞ –ø–æ 52-–¥–Ω–µ–≤–Ω–æ–º—É –±–∏–æ—Ä–∏—Ç–º—É
function getChakra52Cycle(birthDate, currentDate) {
    const birth = new Date(birthDate);
    const now = new Date(currentDate);
    const daysPassed = Math.floor((now - birth) / (1000 * 60 * 60 * 24));
    return Math.floor((daysPassed % 52) / 7.43) + 1;
}

// –ß–∞–∫—Ä–∞ –≥–æ–¥–∞ (–ø–æ –≥–æ–¥—É —Ä–æ–∂–¥–µ–Ω–∏—è)
function getChakraFromYear(date) {
    const year = new Date(date).getFullYear();
    return ((year - 1950) % 7) + 1;
}

// –ß–∞–∫—Ä–∞ –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏ (–í–∞—Ä–∞)
function getChakraFromWeekday(date) {
    const weekday = new Date(date).getDay();
    return (weekday % 7) + 1;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –ß–∞–∫—Ä—ã –¥–Ω—è
function getPersonalChakraDay(birthDate, currentDate, moonDegree) {
    const yearChakra = getChakraFromYear(birthDate);
    const cycleChakra = getChakra52Cycle(birthDate, currentDate);
    const tithi = getCurrentTithi(moonDegree);
    const chakraTitthi = getChakraFromTithi(tithi);
    const chakraWeekday = getChakraFromWeekday(currentDate);
    const chakraMoon = getChakraFromTithi(Math.floor(moonDegree / 12) + 1);

    const chakraDay = Math.round(
        (yearChakra * 0.3) +
        (cycleChakra * 0.3) +
        (chakraTitthi * 0.2) +
        (chakraWeekday * 0.1) +
        (chakraMoon * 0.1)
    );

    return chakraDay > 7 ? 7 : chakraDay;
}

export function getBirthChakra(dateOfBirth, currentDate, sunDegree, moonDegree) {
    let debugLogs = [];

    debugLogs.push(`üîπ –í—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${dateOfBirth}`);

    const yearChakra = getChakraFromYear(dateOfBirth);
    const cycleChakra = getChakra52Cycle(dateOfBirth, currentDate);
    const tithi = getCurrentTithi(moonDegree);
    const lunarChakra = getChakraFromTithi(tithi);
    const solarChakra = getChakraFromTithi(Math.floor(sunDegree / 12) + 1);
    const dayChakra = getPersonalChakraDay(dateOfBirth, currentDate, moonDegree);

    return {
        result: `
        üîÜ –¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –∏–∑ ${chakrasData.chakras[solarChakra - 1].emoji} ${solarChakra}-–π —á–∞–∫—Ä—ã ${chakrasData.chakras[solarChakra - 1].title} (${chakrasData.chakras[solarChakra - 1].name}).
        üåÄ –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –æ—â—É—â–µ–Ω–∏–µ: ${chakrasData.chakras[solarChakra - 1].phases[0].inner}  
        üåç –í–Ω–µ—à–Ω–µ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ: ${chakrasData.chakras[solarChakra - 1].phases[0].outer}  
        ‚ù§Ô∏è –í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö: ${chakrasData.chakras[solarChakra - 1].phases[0].relationship}  
        
        üìÜ –î–ª—è —Ç–µ–±—è —ç—Ç–æ –≥–æ–¥ –ø—Ä–æ ${chakrasData.chakras[yearChakra - 1].desc} –∏–∑ ${chakrasData.chakras[yearChakra - 1].emoji} ${yearChakra}-–π –ß–∞–∫—Ä—ã ${chakrasData.chakras[yearChakra - 1].title} (${chakrasData.chakras[yearChakra - 1].name}).
        üîÑ –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å, –ø–æ 52-–¥–Ω–µ–≤–Ω–æ–º—É —Ü–∏–∫–ª—É, —ç–Ω–µ—Ä–≥–∏—è –°–æ–ª–Ω—Ü–∞ –¥–∞–µ—Ç —Ç–µ–±–µ ${chakrasData.chakras[cycleChakra - 1].desc} —á–µ—Ä–µ–∑ ${chakrasData.chakras[cycleChakra - 1].emoji} ${cycleChakra}-—é –ß–∞–∫—Ä—É ${chakrasData.chakras[cycleChakra - 1].title} (${chakrasData.chakras[cycleChakra - 1].name}).  
       
        üåô –õ—É–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è:  
        –¢–≤–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äî —ç—Ç–æ ${chakrasData.chakras[lunarChakra - 1].desc} –±–ª–∞–≥–æ–¥–∞—Ä—è ${chakrasData.chakras[lunarChakra - 1].emoji} ${lunarChakra}-–π –ß–∞–∫—Ä–µ ${chakrasData.chakras[lunarChakra - 1].title} (${chakrasData.chakras[lunarChakra - 1].name}).
        
        üìÖ –°–µ–≥–æ–¥–Ω—è:
        –¢–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è –≤ —Ñ–æ–∫—É—Å–µ ${chakrasData.chakras[dayChakra - 1].desc} –∏–∑ ${chakrasData.chakras[dayChakra - 1].emoji} ${dayChakra}-–π –ß–∞–∫—Ä—ã ${chakrasData.chakras[dayChakra - 1].title} (${chakrasData.chakras[dayChakra - 1].name}). 
        –° —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è, —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${chakrasData.chakras[lunarChakra - 1].desc}, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç–Ω–µ—Ä–≥–∏—è –≤ ${chakrasData.chakras[lunarChakra - 1].emoji} ${lunarChakra}-–æ–π –ß–∞–∫—Ä–µ ${chakrasData.chakras[lunarChakra - 1].title} (${chakrasData.chakras[lunarChakra - 1].name}).
        `,
        logs: debugLogs,
        solarChakra,
        lunarChakra
    };
}

export function analyzeEQ7Responses(solarChakra, lunarChakra, responses) {
    const solarState = responses.slice(0, 3).includes(true) ? (responses[0] ? "balance" : responses[1] ? "excess" : "block") : "balance";
    const lunarState = responses.slice(3, 6).includes(true) ? (responses[3] ? "balance" : responses[4] ? "excess" : "block") : "balance";
    
    return {
        solarAction: dayEQ7Data.chakras[solarChakra].sun_recommendations[solarState],
        lunarPerception: dayEQ7Data.chakras[lunarChakra].moon_recommendations[lunarState]
    };
}
