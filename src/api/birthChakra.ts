import solarDataRaw from "./solar.json";
import lunarDataRaw from "./lunar.json";

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤
const solarData = Array.isArray(solarDataRaw) ? solarDataRaw : Object.values(solarDataRaw);
const lunarData = Array.isArray(lunarDataRaw) ? lunarDataRaw : Object.values(lunarDataRaw);

export function getBirthChakra(dateOfBirth: string) {
    let debugLogs: string[] = [];

    debugLogs.push(`üîπ –í—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${dateOfBirth}`);

    const solarEntry = solarData.find((entry: any) => entry.Date === dateOfBirth);
    const lunarEntry = lunarData.find((entry: any) => entry.Date === dateOfBirth);

    debugLogs.push(`üåû –ù–∞–π–¥–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –°–æ–ª–Ω—Ü–∞: ${solarEntry ? JSON.stringify(solarEntry) : "‚ùå –î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}`);
    debugLogs.push(`üåô –ù–∞–π–¥–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –õ—É–Ω—ã: ${lunarEntry ? JSON.stringify(lunarEntry) : "‚ùå –î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}`);

    if (!solarEntry || !lunarEntry) {
        debugLogs.push("üö® –û—à–∏–±–∫–∞: –î–∞—Ç–∞ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö!");
        return {
            result: "–î–∞—Ç–∞ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö",
            logs: debugLogs
        };
    }

    debugLogs.push(`‚úÖ –ò—Ç–æ–≥: –ì—Ä–∞–¥—É—Å—ã –°–æ–ª–Ω—Ü–∞: ${solarEntry["Solar_Longitude"]} | –ì—Ä–∞–¥—É—Å—ã –õ—É–Ω—ã: ${lunarEntry["Lunar_Longitude"]}`);

    return {
        result: {
            sunDegree: solarEntry["Solar_Longitude"],
            moonDegree: lunarEntry["Lunar_Longitude"]
        },
        logs: debugLogs
    };
}
