import solarData from "./solar.json";
import lunarData from "./lunar.json";

export function getBirthChakra(dateOfBirth: string) {
    let debugLogs: string[] = [];

    debugLogs.push(`üîπ –í—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${dateOfBirth}`);

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –≤ –º–∞—Å—Å–∏–≤ (–µ—Å–ª–∏ –æ–Ω –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ –æ–±—ä–µ–∫—Ç)
    const solarArray = Array.isArray(solarData) ? solarData : Object.values(solarData);
    const lunarArray = Array.isArray(lunarData) ? lunarData : Object.values(lunarData);

    const solarEntry = solarArray.find((entry: any) => entry.Date === dateOfBirth);
    const lunarEntry = lunarArray.find((entry: any) => entry.Date === dateOfBirth);

    debugLogs.push(`üåû –ù–∞–π–¥–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –°–æ–ª–Ω—Ü–∞: ${solarEntry ? JSON.stringify(solarEntry) : "‚ùå –î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}`);
    debugLogs.push(`üåô –ù–∞–π–¥–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –õ—É–Ω—ã: ${lunarEntry ? JSON.stringify(lunarEntry) : "‚ùå –î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}`);

    if (!solarEntry || !lunarEntry) {
        debugLogs.push("üö® –û—à–∏–±–∫–∞: –î–∞—Ç–∞ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö!");
        return {
            result: "–î–∞—Ç–∞ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö",
            logs: debugLogs
        };
    }

    debugLogs.push(`‚úÖ –ò—Ç–æ–≥: –ì—Ä–∞–¥—É—Å—ã –°–æ–ª–Ω—Ü–∞: ${solarEntry.Solar_Longitude} | –ì—Ä–∞–¥—É—Å—ã –õ—É–Ω—ã: ${lunarEntry.Lunar_Longitude}`);

    return {
        result: {
            sunDegree: solarEntry.Solar_Longitude,
            moonDegree: lunarEntry.Lunar_Longitude
        },
        logs: debugLogs
    };
}
