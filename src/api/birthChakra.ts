import chakrasData from "./chakras.json";

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¢–∏—Ç—Ö–∏ (–õ—É–Ω–Ω–æ–≥–æ –¥–Ω—è)
function getCurrentTithi(lunarLongitude: number): number {
    return Math.floor(lunarLongitude / 12) + 1;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ß–∞–∫—Ä—ã –ø–æ –¢–∏—Ç—Ö–∏
function getChakraFromTithi(tithi: number): number {
    return Math.floor((tithi - 1) / 4.29) + 1;
}

// –ß–∞–∫—Ä–∞ –ø–æ 52-–¥–Ω–µ–≤–Ω–æ–º—É –±–∏–æ—Ä–∏—Ç–º—É
function getChakra52Cycle(birthDate: string, currentDate: string): number {
    const birth = new Date(birthDate);
    const now = new Date(currentDate);
    const daysPassed = Math.floor((now.getTime() - birth.getTime()) / (1000 * 60 * 60 * 24));
    return Math.floor((daysPassed % 52) / 7.43) + 1;
}

// –ß–∞–∫—Ä–∞ –≥–æ–¥–∞
function getChakraFromYear(date: string): number {
    const year = new Date(date).getFullYear();
    return ((year - 1950) % 7) + 1;
}

// –ß–∞–∫—Ä–∞ –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏
function getChakraFromWeekday(date: string): number {
    const weekday = new Date(date).getDay();
    return (weekday % 7) + 1;
}

// –ß–∞–∫—Ä–∞ –¥–Ω—è (–Ω–æ–≤–∞—è –ª–æ–≥–∏–∫–∞)
function getPersonalChakraDay(birthDate: string, currentDate: string, moonDegree: number): number {
    const yearChakra = getChakraFromYear(birthDate);
    const cycleChakra = getChakra52Cycle(birthDate, currentDate);
    const tithi = getCurrentTithi(moonDegree);
    const chakraTitthi = getChakraFromTithi(tithi);
    const chakraWeekday = getChakraFromWeekday(currentDate);
    const chakraMoon = getChakraFromTithi(Math.floor(moonDegree / 12) + 1);

    const chakraDay = Math.round(
        (yearChakra * 0.3) +  
        (cycleChakra * 0.3) + 
        (chakraTitthi * 0.2) + 
        (chakraWeekday * 0.1) + 
        (chakraMoon * 0.1) 
    );

    return chakraDay > 7 ? 7 : chakraDay;
}

// **–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ß–∞–∫—Ä—ã**
export function getBirthChakra(dateOfBirth: string, currentDate: string, sunDegree: number, moonDegree: number) {
    const yearChakra = getChakraFromYear(dateOfBirth);
    const cycleChakra = getChakra52Cycle(dateOfBirth, currentDate);
    const tithi = getCurrentTithi(moonDegree);
    const lunarChakra = getChakraFromTithi(tithi);
    const solarChakra = getChakraFromTithi(Math.floor(sunDegree / 12) + 1);
    const chakraSun = chakrasData.chakras[solarChakra - 1];
    const chakraMoon = chakrasData.chakras[lunarChakra - 1];
    const dayChakra = getPersonalChakraDay(dateOfBirth, currentDate, moonDegree);

    return {
        result: `
        üîÜ –¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –∏–∑ ${chakraSun.emoji} ${solarChakra}-–π —á–∞–∫—Ä—ã ${chakraSun.title} (${chakraSun.name}).
        üåÄ –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –æ—â—É—â–µ–Ω–∏–µ: ${chakraSun.phases[0].inner}  
        üåç –í–Ω–µ—à–Ω–µ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ: ${chakraSun.phases[0].outer}  
        ‚ù§Ô∏è –í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö: ${chakraSun.phases[0].relationship}  

        üìÜ –î–ª—è —Ç–µ–±—è —ç—Ç–æ –≥–æ–¥ –ø—Ä–æ ${chakrasData.chakras[yearChakra - 1].desc}.
        üîÑ –°–µ–π—á–∞—Å, –ø–æ 52-–¥–Ω–µ–≤–Ω–æ–º—É —Ü–∏–∫–ª—É, —ç–Ω–µ—Ä–≥–∏—è –°–æ–ª–Ω—Ü–∞ –¥–∞—ë—Ç —Ç–µ–±–µ ${chakrasData.chakras[cycleChakra - 1].desc}.  
       
        üåô –õ—É–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è:  
        –¢–≤–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äî —ç—Ç–æ ${chakraMoon.desc}.
        
        üìÖ –°–µ–≥–æ–¥–Ω—è:
        –¢–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è –≤ —Ñ–æ–∫—É—Å–µ ${chakrasData.chakras[dayChakra - 1].desc}.
        `,
    };
}

// **–î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ (–≤–µ—Ä–Ω—É–ª–∏ –≤ –∫–æ–¥)**
export function analyzeQuery(answers: boolean[]) {
    const selectedChakras = answers
        .map((answer, index) => (answer ? index + 1 : null))
        .filter((index) => index !== null) as number[];

    let interpretation = "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è.";
    let growthVector = "–≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞–∂–µ–Ω, –Ω–æ –æ–Ω —É–≤–æ–¥–∏—Ç –≤–∞—Å –≤ —Å—Ç–æ—Ä–æ–Ω—É.";
    
    if (selectedChakras.length === 1) {
        interpretation = "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∞—Å –≤ —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏.";
    } else if (selectedChakras.length > 1) {
        interpretation = "–í–∞—à –∑–∞–ø—Ä–æ—Å —Å–æ—á–µ—Ç–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ —Å–ª–æ–∂–Ω–µ–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.";
    }

    return { interpretation, growthVector };
}
